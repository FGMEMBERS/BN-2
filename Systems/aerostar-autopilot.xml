<?xml version="1.0"?>
<!-- Aerostar 700 autopilot-->
<PropertyList>
<!-- =============================== -->
<!-- ======  Roll Axis Modes  ====== -->
<!-- =============================== -->

<!-- Wing leveler -->
    <pid-controller>
        <name>Wing Leveler (Turn Coordinator based)</name>
        <debug>false</debug>
        <enable>
            <prop>autopilot/locks/heading</prop>
            <value>wing-leveler</value>
            <honor-passive>true</honor-passive>
        </enable>
        <input>
            <prop>orientation/roll-deg</prop>
        </input>
        <reference>
            <value>0.0</value>
        </reference>
        <output>
            <prop>controls/flight/aileron-filtered</prop>
        </output>
        <config>
            <Kp>1.5</Kp>
            <beta>1.0</beta>
            <alpha>0.1</alpha>
            <gamma>0.0</gamma>
            <Ti>1.0</Ti>       <!-- integrator time -->
            <Td>0.0001</Td>    <!-- derivator time -->
            <u_min>-1.0</u_min> <!-- minimum output clamp -->
            <u_max>1.0</u_max>  <!-- maximum output clamp -->
        </config>
    </pid-controller>

<!-- Heading Bug Hold.  2 stage cascade controller. -->

<!-- Stage #1 sets target roll based on diff between current heading -->
<!-- and heading bug. -->

    <pi-simple-controller>
        <name>Heading Bug Hold (DG based) Stage 1</name>
        <debug>false</debug>
        <enable>
            <prop>autopilot/locks/heading</prop>
            <value>dg-heading-hold</value>
        </enable>
        <input>
            <prop>autopilot/internal/fdm-heading-bug-error-deg</prop>
        </input>
        <reference>
            <value>0.0</value>
        </reference>
        <output>
            <prop>autopilot/internal/target-roll-deg</prop>
        </output>
        <config>
            <Kp>-0.5</Kp>
            <Ki>0.0</Ki>
            <u_min>-35.0</u_min>
            <u_max>35.0</u_max>
        </config>
    </pi-simple-controller>

<!-- Stage #2 drives the ailerons to achieve the desired roll deg. -->

    <pid-controller>
        <name>Heading Bug Hold (DG based) Stage 2</name>
        <debug>false</debug>
        <enable>
            <prop>autopilot/locks/heading</prop>
            <value>dg-heading-hold</value>
            <honor-passive>true</honor-passive>
        </enable>
        <input>
            <prop>orientation/roll-deg</prop>
        </input>
        <reference>
            <prop>autopilot/internal/target-roll-deg</prop>
        </reference>
        <output>
            <prop>controls/flight/aileron</prop>
        </output>
        <config>
            <Kp>1.5</Kp>
            <beta>1.0</beta>
            <alpha>0.1</alpha>
            <gamma>0.0</gamma>
            <Ti>10.0</Ti>
            <Td>0.01</Td>
            <u_min>-1.0</u_min>
            <u_max>1.0</u_max>
        </config>
    </pid-controller>

<!-- Nav1 hold.  2 stage cascade controller. -->

<!-- Stage #1 sets target roll based on nav1-heading-error-deg. -->

    <pid-controller>
        <name>Nav1 Hold Stage 1</name>
        <debug>false</debug>
        <enable>
            <prop>autopilot/locks/heading</prop>
            <value>nav1-hold</value>
        </enable>
        <input>
            <prop>autopilot/internal/nav1-heading-error-deg</prop>
        </input>
        <reference>
            <value>0.0</value>
        </reference>
        <output>
            <prop>autopilot/internal/target-roll-deg</prop>
        </output>
        <config>
            <Kp>-1.3</Kp>
            <beta>1.0</beta>
            <alpha>0.1</alpha>
            <gamma>0.0</gamma>
            <Ti>10</Ti>
            <Td>0.00001</Td>
            <u_min>-35.0</u_min>
            <u_max>35.0</u_max>
        </config>
    </pid-controller>

<!-- Stage #2 drives the ailerons to achieve the desired roll deg. -->

    <pid-controller>
        <name>Nav1 Hold Stage 2</name>
        <debug>false</debug>
        <enable>
            <prop>autopilot/locks/heading</prop>
            <value>nav1-hold</value>
            <honor-passive>true</honor-passive>
        </enable>
        <input>
            <prop>orientation/roll-deg</prop>
        </input>
        <reference>
            <prop>autopilot/internal/target-roll-deg</prop>
        </reference>
        <output>
            <prop>controls/flight/aileron</prop>
        </output>
        <config>
            <Kp>0.5</Kp>
            <beta>1.0</beta>
            <alpha>0.1</alpha>
            <gamma>0.0</gamma>
            <Ti>10.0</Ti>
            <Td>0.02</Td>
            <u_min>-1.0</u_min>
            <u_max>1.0</u_max>
        </config> 
    </pid-controller>

<!-- ================================ -->
<!-- ======= Pitch Axis Modes ======= -->
<!-- ================================ -->

<!-- Simple pitch hold -->

    <pid-controller>
        <name>Pitch hold</name>
        <debug>false</debug>
        <enable>
            <prop>autopilot/locks/altitude</prop>
            <value>pitch-hold</value>
            <honor-passive>true</honor-passive>
        </enable>
        <input>
            <prop>orientation/pitch-deg</prop>
        </input>
        <reference>
            <prop>autopilot/settings/target-pitch-deg</prop>
        </reference>
        <output>
            <prop>controls/flight/elevator-trim</prop>
        </output>
        <config>
            <Kp>-0.15</Kp>
            <beta>1.0</beta>
            <alpha>0.1</alpha>
            <gamma>0.0</gamma>
            <Ti>10.0</Ti>
            <Td>0.02</Td>
            <u_min>-1.0</u_min>
            <u_max>1.0</u_max>
        </config>
    </pid-controller>

<!-- Altitude hold.  3 stage cascade controller. -->

<!-- Stage #1 sets target rate of climb based on diff between current -->
<!-- alt and target altitude. -->

    <pi-simple-controller>
        <name>Altitude Hold (Altimeter based) Stage 1</name>
        <debug>false</debug>
        <enable>
            <prop>autopilot/locks/altitude</prop>
            <value>altitude-hold</value>
        </enable>
        <input>
            <prop>instrumentation/altimeter/pressure-alt-ft</prop>
        </input>
        <reference>
            <prop>autopilot/settings/target-altitude-ft</prop>
        </reference>
        <output>
            <prop>autopilot/internal/target-climb-rate-fps</prop>
        </output>
        <config>
            <Kp>0.5</Kp>
            <Ki>0.0</Ki>
            <u_min>-50.0</u_min>
            <u_max>50.0</u_max>
        </config>
    </pi-simple-controller>

<!-- Stage #2 drives the target-pitch to achieve the desired climb -->
<!-- rate. -->

    <pid-controller>
        <name>Altitude Hold (Altimeter based) Stage 2</name>
        <debug>false</debug>
        <enable>
            <prop>autopilot/locks/altitude</prop>
            <value>altitude-hold</value>
        </enable>
        <input>
            <prop>velocities/vertical-speed-fps</prop>
        </input>
        <reference>
            <prop>autopilot/internal/target-climb-rate-fps</prop>
        </reference>
        <output>
            <prop>autopilot/settings/target-pitch-deg</prop>
        </output>
        <config>
            <Kp>0.02</Kp>
            <beta>1.0</beta>
            <alpha>0.1</alpha>
            <gamma>0.0</gamma>
            <Ti>10.0</Ti>
            <Td>0.00001</Td>
            <u_min>-5.0</u_min>
            <u_max>5.0</u_max>
        </config>
    </pid-controller>

<!-- Stage #3 drives the elevator trim to achieve the desired pitch -->
<!-- angle -->

    <pid-controller>
        <name>Pitch hold</name>
        <debug>false</debug>
        <enable>
            <prop>autopilot/locks/altitude</prop>
            <value>altitude-hold</value>
            <honor-passive>true</honor-passive>
        </enable>
        <input>
            <prop>orientation/pitch-deg</prop>
        </input>
        <reference>
            <prop>autopilot/settings/target-pitch-deg</prop>
        </reference>
        <output>
            <prop>controls/flight/elevator-trim</prop>
        </output>
        <config>
            <Kp>-0.05</Kp>
            <beta>1.0</beta>
            <alpha>0.1</alpha>
            <gamma>0.0</gamma>
            <Ti>20.0</Ti>
            <Td>0.02</Td>
            <u_min>-0.5</u_min>
            <u_max>0.5</u_max>
        </config>
    </pid-controller>

<!-- Glideslope hold.  2 stage cascade controller -->

<!-- Stage #1 sets the target-pitch based on the desired rate of climb -->
<!-- relative to the glide slope. -->

    <pid-controller>
        <name>Glideslope Hold</name>
        <debug>false</debug>
        <enable>
            <prop>autopilot/locks/altitude</prop>
            <value>gs1-hold</value>
        </enable>
        <input>
            <prop>velocities/vertical-speed-fps</prop>
        </input>
        <reference>
            <prop>instrumentation/nav[0]/gs-rate-of-climb</prop>
        </reference>
        <output>
            <prop>autopilot/settings/target-pitch-deg</prop>
        </output>
        <config>
            <Kp>0.5</Kp>
            <beta>1.0</beta>
            <alpha>0.1</alpha>
            <gamma>0.0</gamma>
            <Ti>10.0</Ti>
            <Td>0.00001</Td>
            <u_min>-15.0</u_min>
            <u_max>15.0</u_max>
        </config>
    </pid-controller>

<!-- Stage #2 drives the elevator trim to achieve the desired pitch -->
<!-- angle -->

    <pid-controller>
        <name>Pitch hold</name>
        <debug>false</debug>
        <enable>
            <prop>autopilot/locks/altitude</prop>
            <value>gs1-hold</value>
            <honor-passive>true</honor-passive>
        </enable>
        <input>
            <prop>orientation/pitch-deg</prop>
        </input>
        <reference>
            <prop>autopilot/settings/target-pitch-deg</prop>
        </reference>
        <output>
            <prop>controls/flight/elevator-trim</prop>
        </output>
        <config>
            <Kp>-0.15</Kp>
            <beta>1.0</beta>
            <alpha>0.1</alpha>
            <gamma>0.0</gamma>
            <Ti>10.0</Ti>
            <Td>0.2</Td>
            <u_min>-1.0</u_min>
            <u_max>1.0</u_max>
        </config>
    </pid-controller>

</PropertyList>

